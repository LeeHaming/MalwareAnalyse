#coding:utf-8

#希望将一个apk的全部smali整理到一起
#或者直接读取该目录下的所有smali文件
#统计opcode
import os
from collections import Counter

def readDir(dirPath):
    if dirPath[-1] == '/':
        print(u'文件夹路径末尾不能加/')
        return
    allFiles = []
    if os.path.isdir(dirPath):
        fileList = os.listdir(dirPath)
        for f in fileList:
            f = dirPath+'/'+f
            if os.path.isdir(f):
                subFiles = readDir(f)
                allFiles = subFiles + allFiles #合并当前目录与子目录的所有文件路径
            else:
                allFiles.append(f)
        return allFiles
    else:
        return 'Error,not a dir'


def out(filename,dic):
	fp=open(filename,mode="w+")
	for i,(opcode,nums) in enumerate(dic.most_common(),1):
		fp.write(opcode+" "+str(nums)+"\n")
	fp.close()

d='E:\MalwareAnalyse\smalis-opcode\smalis\\'
opcodesD="E:\MalwareAnalyse\smalis-opcode\opcodes\\"
allDir=[os.path.join(d,o) for o in os.listdir(d) if os.path.isdir(os.path.join(d,o))]
#print(allDir)

for apkDir in allDir:
	print("---------------------------------------"+apkDir+"---------------------------------------")
	print(apkDir.split('\\')[-1])

	opcodeDir=opcodesD+apkDir.split('\\')[-1]+".txt"
	print(opcodeDir)

	smali_file_List=readDir(apkDir)
	
	#fp=open(opcodeDir,mode="w+")
	dic=Counter()

	#for f in smali_file_List:
	#(dirpath, dirnames, filenames).
	#for fileDir in os.walk(apkDir):
	#	for smali_filename in fileDir[2]:
	for f in smali_file_List:
		if f.endswith(".smali"):
			try:
				print('find smali:',f)
				with open(f,mode="r") as bigfile:
					reader=bigfile.read()
					for i,part in enumerate(reader.split(".method")):
						add_newline=False
						if i!=0:
							#fp=open(apkDir+".txt",mode="w+")
							method_part=part.split(".end method")[0]
							method_body=method_part.split('\n')
							for line in method_body:
								if not line.strip().startswith('.') and not line.strip().startswith('#') and not line.strip().startswith(':') and line.strip():
									method_line=line.strip().split()
									#fp.write(method_line[0]+'\n')
									#print(method_line[0])
									dic[(method_line[0])]+=1
			except UnicodeDecodeError:
				print('file is interrupted for ---UnicodeDecodeError')
				continue
			except AttributeError:
				print('file is interrupted for ---AttributeError')
				continue	
			except Exception:
				print('file is interrupted for ---Exception')
				continue				
			else:
				print('file is finished')

	print(dic)
	out(opcodeDir,dic)
	#fp.write(dic)
	
	