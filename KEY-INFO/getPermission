def getAppBaseInfo(apkpath):  
    #检查版本号等信息  
    output = os.popen("./aapt d badging %s" % apkpath).read()  
    match = re.compile("package: name='(\S+)' versionCode='(\d+)' versionName='(\S+)' \
    	platformBuildVersionName='\S+'").match(output)  
    if not match:  
        raise Exception("can't get packageinfo")  
    packagename = match.group(1)  
    versionCode = match.group(2)  
    versionName = match.group(3)  
    print('packagename:' + packagename)  
    print('versionCode:' + versionCode)  
    print('versionName:' + versionName)  
    #获得所有的权限  
    outList = output.split('\n')  
    for line in outList:  
        if line.startswith('uses-permission:'):  
            print(line.split('=')[1])  

#获取向量
fileCode=""
for i in range(1,len(dict)):
	if dict[i] in permissions:
		fileCode+='1'
	else:
		fileCode+='0'


相关工具：
aapt: aapt即Android Asset Packaging Tool.
学习相关链接：
https://blog.csdn.net/goodlixueyong/article/details/52004668

两种方式：
aapt d badging b03.apk
aapt d permissions b03.apk
